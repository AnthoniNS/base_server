x-php: &php
  build:
    context: .
    dockerfile: ./conf/docker/php/php.dockerfile
    args:
      ENVIRONMENT: development
  restart: unless-stopped
  working_dir: /srv
  volumes:
    - ./www/core_tenant:/srv
    - ~/www/core_tenant/.composer:/home/composer/.cache/composer
    - ~/www/core_tenant/.composer/auth.json:/config/composer/auth.json
    - ./www/core_tenant/vendor:/srv/vendor
    - ./conf/traefik:/srv/traefik
    - ./conf:/srv/conf
  depends_on:
    - mysql
  command: >
    sh -c "composer install --no-interaction --no-progress --optimize-autoloader"
  networks:
    - minharede

services:
  mysql:
    image: mysql:8.0-debian
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./www/core_tenant/sql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: barbeshop
      MYSQL_ALLOW_EMPTY_PASSWORD: "false"
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - minharede

  php:
    <<: *php
    container_name: php
    user: "root:root"
    ports:
      - '80:80'
    depends_on:
      - mysql
    networks:
      - minharede

  queue:
    <<: *php
    networks:
      - minharede

  scheduler:
    <<: *php
    command: supercronic /srv/conf/docker/php/config/schedule.cron
    networks:
      - minharede

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - minharede

  mailpit:
    image: axllent/mailpit:v1.12
    restart: unless-stopped
    ports:
      - '8025:8025'
      - "1025:1025"
    networks:
      - minharede

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - minharede

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - minharede

  postgresql:
    image: postgres:16
    restart: always
    volumes:
      - ./conf/docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres_data:/var/lib/postgresql/data
      - ./conf/docker/postgres/init:/docker-entrypoint-initdb.d
    env_file:
      - ./conf/docker/postgres/.env
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U administrator" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - minharede

  typebotbuilder:
    build:
      context: ./www/typebot
      args:
        - SCOPE=builder
    depends_on:
      postgresql:
        condition: service_healthy
    restart: always
    ports:
      - '1020:3000'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file: ./www/typebot/.env
    networks:
      - minharede

  typebotviewer:
    build:
      context: ./www/typebot
      args:
        - SCOPE=viewer
    depends_on:
      postgresql:
        condition: service_healthy
    restart: always
    ports:
      - '1021:3000'
    env_file: ./www/typebot/.env
    networks:
      - minharede

  evolution:  
    image: atendai/evolution-api:v2.2.1 ## VersÃ£o da Evolution API
    container_name: evolution
    restart: unless-stopped
    volumes:
      - evolution_instances_data:/evolution/instances
    ports:
      - '8080:8080'    
    networks:
      - minharede
    env_file:
      - ./www/evolution/.env


volumes:
  redis-data:
  mysql-data:
  typebot-data:
  postgres_data:
  evolution_instances_data:
    driver: local

networks:
  minharede:
    external: true
